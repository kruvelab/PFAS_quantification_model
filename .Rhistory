Orbitrap_dataset_raw = Orbitrap_dataset_raw %>%
group_by(Compound) %>%
mutate(`Theoretical Amt`=case_when(
Filename=="2020071205-cal21"~mean(`Theoretical Amt`[Filename=="2020071205-cal22"]),
TRUE~`Theoretical Amt`
))%>%ungroup()
SMILES_data = read_delim("data/Smiles_for_Target_PFAS_semicolon.csv",
delim = ";",
col_names = TRUE)
SMILES_data = SMILES_data %>%
rename(Compound = ID) %>%
select(Compound, SMILES, Class) %>%
na.omit()
#remove adducts
SMILES_data = SMILES_data[-c(17,26),]
descs_calc_PFAS = PaDEL_original(SMILES_data)
descs_calc_PFAS = read_delim("data/descs_calc.csv",
delim = ",",
col_names = TRUE)
descs_calc_PFAS = descs_calc_PFAS %>%
select(Compound, SMILES,
#all_of(descs_names),
everything())
descs_calc_PFAS = descs_calc_PFAS %>%
group_by(SMILES) %>%
mutate(IC = isotopedistribution(SMILES),
MW = molecularmass(SMILES)) %>%
ungroup()
#eluent---
eluent = read_delim("data/eluent.csv",
delim = ",",
col_names = TRUE)
organic_modifier = "MeCN"
pH.aq. = 7.0
data = Orbitrap_dataset_raw %>%
left_join(descs_calc_PFAS)
data = data %>%
group_by(Compound) %>%
mutate(RT = mean(RT)) %>%
ungroup()
data = data %>%
mutate(
RT = as.numeric(RT),
area_IC = Area*IC,
organic_modifier = organic_modifier,
pH.aq. = pH.aq.,
NH4 = 1, #1 if the buffer contains NH¤ ions , 0 if not.
organic = organicpercentage(eluent,RT),
viscosity = viscosity(organic,organic_modifier),
surface_tension = surfacetension(organic,organic_modifier),
polarity_index = polarityindex(organic,organic_modifier))
training = data %>%
filter(!is.na(SMILES)) %>%
filter(`Theoretical Amt` != "N/F") %>%
filter(`Theoretical Amt` != "N/A") %>%
mutate(`Theoretical Amt` = as.numeric(`Theoretical Amt`)) %>%
mutate(`Theoretical Amt` = `Theoretical Amt`/MW) #correct with MW
ggplot(data = training) +
geom_point(mapping = aes(x = `Theoretical Amt`,
y = area_IC)) +
facet_wrap(~Compound, scales = "free") +
scale_x_log10() +
scale_y_log10()
training = training %>%
group_by(SMILES) %>%
mutate(slope = linear_regression(area_IC, `Theoretical Amt`)$slope) %>%
ungroup()
IE_pred = training %>%
mutate(logIE_pred = 0) %>%
rename(organic_modifier_percentage = organic,
"name" = Compound)%>%
mutate(additive = "ammoniumacetate",
additive_concentration_mM = 2,
instrument = "Orbitrap",
source = "ESI",
solvent = "MeCN",#placeholder
SPLIT = "TRUE")%>%#placeholder
select(name,SMILES, 1452:1468,everything(),
-Filename,-RT,-Class,-`Theoretical Amt`,-SPLIT)%>%
na.omit()
IE_pred = IE_pred%>%
unique()
# prediction =  predict(regressor, newdata = IE_pred, predict.all = TRUE)
# prediction = prediction$aggregate
IE_pred <- IE_pred %>%
mutate(logIE_pred = predict(regressor, newdata = IE_pred, predict.all = TRUE)) %>%
select(SMILES,logIE_pred, everything())
IE_pred = IE_pred %>%
left_join(SMILES_data) %>%
select(name, SMILES, Class, logIE_pred, slope, everything(),-Compound)
correlation_factor = lm(log10(slope)~logIE_pred,data = IE_pred)
IE_pred = IE_pred %>%
mutate(response_factor = correlation_factor$coefficients[2]*logIE_pred +
correlation_factor$coefficients[1])%>%
mutate(pred_conc. = area_IC/(10^response_factor))%>%
left_join(training)%>%
mutate(error_factor = case_when(pred_conc. < `Theoretical Amt` ~ `Theoretical Amt`/pred_conc.,
pred_conc. >`Theoretical Amt` ~ pred_conc./`Theoretical Amt`))%>%
mutate(less_than_ten = case_when(error_factor < 10 ~ TRUE,
error_factor > 10 ~ FALSE))
Conc._error_boxplots = ggplot(data = IE_pred) +
geom_boxplot(mapping = aes(x = Class,
y = error_factor))
Conc._error_boxplots +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
IE_pred = IE_pred %>%
rename("Theoretical_pg/uL" = "Theoretical Amt",
"pred_pg/uL" = pred_conc.)
concentration_cor_Thomas = ggplot(data = IE_pred %>%
filter(instrument == "Orbitrap")) +
geom_point(mapping = aes(x = "Theoretical_pg/uL",
y = "pred_pg/uL",
#text = name)) +
color = name)) +
scale_y_log10() +
scale_x_log10() +
theme(legend.position="none")+
geom_abline(slope = 1, intercept = 0)+
facet_wrap(~Class)
concentration_cor_Thomas
Spiked_samples = Spiked_samples %>%
rename("Sample ID" = Filename,
name = Compound)
Spiked_samples = Spiked_samples[-c(1:3,7:12,17:25,31:42,46:52,59:73,127:138,112:114,119:122),]
Spiked_samples = Orbitrap_dataset_raw %>%
filter(Filename == "QCN-CL" | Filename == "QCN-BL" | Filename == "QCN-AL" | Filename == "PL-4") %>%
select(-`Theoretical Amt`) %>%
na.omit()
Spiked_samples = Spiked_samples %>%
rename("Sample ID" = Filename,
name = Compound)
Spiked_samples = Orbitrap_dataset_raw %>%
filter(Filename == "QCN-CL" | Filename == "QCN-BL" | Filename == "QCN-AL" | Filename == "PL-4") %>%
select(-`Theoretical Amt`) %>%
na.omit()
library(tidyverse)
library(plotly)
setwd("~/GitHub/PFOA_semi_quant")
source("code/PaDEL_descs_calculator.R")
source("code/reading_excel.R")
source("code/compound_eluent.R")
#regressor----
regressor = readRDS("regressors/PFAS_FOREST.rds")
#lcms data ----
filename = "data/Batch 1 Semi Quant w frag PL4 rep.xlsx"
Orbitrap_dataset_raw = read_excel_allsheets(filename)
Spiked_samples = Orbitrap_dataset_raw %>%
filter(Filename == "QCN-CL" | Filename == "QCN-BL" | Filename == "QCN-AL" | Filename == "PL-4") %>%
select(-`Theoretical Amt`) %>%
na.omit()
Orbitrap_dataset_raw = Orbitrap_dataset_raw %>%
na.omit(Area) %>%
filter(Area != "N/F") %>%
mutate(Area = as.numeric(Area))
Orbitrap_dataset_raw = Orbitrap_dataset_raw %>%
group_by(Compound) %>%
mutate(`Theoretical Amt`=case_when(
Filename=="2020071205-cal21"~mean(`Theoretical Amt`[Filename=="2020071205-cal22"]),
TRUE~`Theoretical Amt`
))%>%ungroup()
#smiles----
SMILES_data = read_delim("data/Smiles_for_Target_PFAS_semicolon.csv",
delim = ";",
col_names = TRUE)
SMILES_data = SMILES_data %>%
rename(Compound = ID) %>%
select(Compound, SMILES, Class) %>%
na.omit()
#remove adducts
SMILES_data = SMILES_data[-c(17,26),]
descs_calc_PFAS = PaDEL_original(SMILES_data)
descs_calc_PFAS = read_delim("data/descs_calc.csv",
delim = ",",
col_names = TRUE)
descs_calc_PFAS = descs_calc_PFAS %>%
select(Compound, SMILES,
#all_of(descs_names),
everything())
descs_calc_PFAS = descs_calc_PFAS %>%
group_by(SMILES) %>%
mutate(IC = isotopedistribution(SMILES),
MW = molecularmass(SMILES)) %>%
ungroup()
#eluent---
eluent = read_delim("data/eluent.csv",
delim = ",",
col_names = TRUE)
organic_modifier = "MeCN"
pH.aq. = 7.0
data = Orbitrap_dataset_raw %>%
left_join(descs_calc_PFAS)
data = data %>%
group_by(Compound) %>%
mutate(RT = mean(RT)) %>%
ungroup()
data = data %>%
mutate(
RT = as.numeric(RT),
area_IC = Area*IC,
organic_modifier = organic_modifier,
pH.aq. = pH.aq.,
NH4 = 1, #1 if the buffer contains NH¤ ions , 0 if not.
organic = organicpercentage(eluent,RT),
viscosity = viscosity(organic,organic_modifier),
surface_tension = surfacetension(organic,organic_modifier),
polarity_index = polarityindex(organic,organic_modifier))
training = data %>%
filter(!is.na(SMILES)) %>%
filter(`Theoretical Amt` != "N/F") %>%
filter(`Theoretical Amt` != "N/A") %>%
mutate(`Theoretical Amt` = as.numeric(`Theoretical Amt`)) %>%
mutate(`Theoretical Amt` = `Theoretical Amt`/MW) #correct with MW
ggplot(data = training) +
geom_point(mapping = aes(x = `Theoretical Amt`,
y = area_IC)) +
facet_wrap(~Compound, scales = "free") +
scale_x_log10() +
scale_y_log10()
training = training %>%
group_by(SMILES) %>%
mutate(slope = linear_regression(area_IC, `Theoretical Amt`)$slope) %>%
ungroup()
IE_pred = training %>%
mutate(logIE_pred = 0) %>%
rename(organic_modifier_percentage = organic,
"name" = Compound)%>%
mutate(additive = "ammoniumacetate",
additive_concentration_mM = 2,
instrument = "Orbitrap",
source = "ESI",
solvent = "MeCN",#placeholder
SPLIT = "TRUE")%>%#placeholder
select(name,SMILES, 1452:1468,everything(),
-Filename,-RT,-Class,-`Theoretical Amt`,-SPLIT)%>%
na.omit()
IE_pred = IE_pred%>%
unique()
# prediction =  predict(regressor, newdata = IE_pred, predict.all = TRUE)
# prediction = prediction$aggregate
IE_pred <- IE_pred %>%
mutate(logIE_pred = predict(regressor, newdata = IE_pred, predict.all = TRUE)) %>%
select(SMILES,logIE_pred, everything())
IE_pred = IE_pred %>%
left_join(SMILES_data) %>%
select(name, SMILES, Class, logIE_pred, slope, everything(),-Compound)
correlation_factor = lm(log10(slope)~logIE_pred,data = IE_pred)
IE_pred = IE_pred %>%
mutate(response_factor = correlation_factor$coefficients[2]*logIE_pred +
correlation_factor$coefficients[1])%>%
mutate(pred_conc. = area_IC/(10^response_factor))%>%
left_join(training)%>%
mutate(error_factor = case_when(pred_conc. < `Theoretical Amt` ~ `Theoretical Amt`/pred_conc.,
pred_conc. >`Theoretical Amt` ~ pred_conc./`Theoretical Amt`))%>%
mutate(less_than_ten = case_when(error_factor < 10 ~ TRUE,
error_factor > 10 ~ FALSE))
Conc._error_boxplots = ggplot(data = IE_pred) +
geom_boxplot(mapping = aes(x = Class,
y = error_factor))
Conc._error_boxplots +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
IE_pred = IE_pred %>%
rename("Theoretical_pg/uL" = "Theoretical Amt",
"pred_pg/uL" = pred_conc.)
concentration_cor_Thomas = ggplot(data = IE_pred %>%
filter(instrument == "Orbitrap")) +
geom_point(mapping = aes(x = "Theoretical_pg/uL",
y = "pred_pg/uL",
#text = name)) +
color = name)) +
scale_y_log10() +
scale_x_log10() +
theme(legend.position="none")+
geom_abline(slope = 1, intercept = 0)+
facet_wrap(~Class)
Spiked_samples = Spiked_samples %>%
rename("Sample ID" = Filename,
name = Compound)
View(Spiked_samples)
Spiked_samples = Spiked_samples[-c(1:3,7:12,17:25,29:42,46:52,59:73,127:138,112:114,119:122),]
IE_prededit <- IE_pred %>%
select(name, SMILES, logIE_pred,IC,MW)
IE_prededit <- IE_prededit %>%
unique()
blank_areas = Spiked_samples %>%
select(name) %>%
unique() %>%
left_join(Spiked_samples %>%
filter(`Sample ID` == "PL-4") %>%
select(name, Area)) %>%
mutate(Area = case_when(
is.na(Area) ~ 0,
TRUE ~ Area)) %>%
rename(Area_background = Area)
Spiked_samples = Spiked_samples %>%
left_join(IE_prededit) %>%
left_join(blank_areas) %>%
mutate(Area = Area - Area_background,
area_IC = Area*IC)
Spiked_samples = Spiked_samples %>%
mutate(response_factor3 = correlation_factor$coefficients[2]*logIE_pred +
correlation_factor$coefficients[1])%>%
mutate(pred_conc. = area_IC/(10^response_factor3))
Spiked_samples = Spiked_samples %>%
mutate(pred_conc_pg_uL = pred_conc.*MW)%>%
select(pred_conc_pg_uL, everything())%>%
mutate(pred_conc_ng = case_when(
`Sample ID` == "QCN-AL" ~ (pred_conc_pg_uL*1097.2010178117)/1000,
`Sample ID` == "QCN-BL" ~ (pred_conc_pg_uL*961.704834605598)/1000,
`Sample ID` == "QCN-CL" ~ (pred_conc_pg_uL*952.162849872773)/1000,
TRUE ~ (pred_conc_pg_uL*1000)/1000))%>%
select(pred_conc_ng, , everything())
ggplot(data = Spiked_samples %>%
filter(`Sample ID` != "PL-4"),
mapping = aes(x = name,
y = pred_conc_ng,
fill = `Sample ID`)) +
geom_bar(position = "dodge", stat = "identity") +
geom_abline(slope = 0, intercept = 5) +
labs(x = "") +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.5,
hjust = 1))
library(tidyverse)
library(plotly)
setwd("~/GitHub/PFOA_semi_quant")
source("code/PaDEL_descs_calculator.R")
source("code/reading_excel.R")
source("code/compound_eluent.R")
#regressor----
regressor = readRDS("regressors/PFAS_FOREST.rds")
#lcms data ----
filename = "data/Batch 1 Semi Quant w frag PL4 rep.xlsx"
Orbitrap_dataset_raw = read_excel_allsheets(filename)
Spiked_samples = Orbitrap_dataset_raw %>%
filter(Filename == "QCN-CL" | Filename == "QCN-BL" | Filename == "QCN-AL" | Filename == "PL-4") %>%
select(-`Theoretical Amt`) %>%
na.omit()
Orbitrap_dataset_raw = Orbitrap_dataset_raw %>%
na.omit(Area) %>%
filter(Area != "N/F") %>%
mutate(Area = as.numeric(Area))
Orbitrap_dataset_raw = Orbitrap_dataset_raw %>%
group_by(Compound) %>%
mutate(`Theoretical Amt`=case_when(
Filename=="2020071205-cal21"~mean(`Theoretical Amt`[Filename=="2020071205-cal22"]),
TRUE~`Theoretical Amt`
))%>%ungroup()
#smiles----
SMILES_data = read_delim("data/Smiles_for_Target_PFAS_semicolon.csv",
delim = ";",
col_names = TRUE)
SMILES_data = SMILES_data %>%
rename(Compound = ID) %>%
select(Compound, SMILES, Class) %>%
na.omit()
#remove adducts
SMILES_data = SMILES_data[-c(17,26),]
descs_calc_PFAS = PaDEL_original(SMILES_data)
descs_calc_PFAS = read_delim("data/descs_calc.csv",
delim = ",",
col_names = TRUE)
descs_calc_PFAS = descs_calc_PFAS %>%
select(Compound, SMILES,
#all_of(descs_names),
everything())
descs_calc_PFAS = descs_calc_PFAS %>%
group_by(SMILES) %>%
mutate(IC = isotopedistribution(SMILES),
MW = molecularmass(SMILES)) %>%
ungroup()
#eluent---
eluent = read_delim("data/eluent.csv",
delim = ",",
col_names = TRUE)
organic_modifier = "MeCN"
pH.aq. = 7.0
data = Orbitrap_dataset_raw %>%
left_join(descs_calc_PFAS)
data = data %>%
group_by(Compound) %>%
mutate(RT = mean(RT)) %>%
ungroup()
data = data %>%
mutate(
RT = as.numeric(RT),
area_IC = Area*IC,
organic_modifier = organic_modifier,
pH.aq. = pH.aq.,
NH4 = 1, #1 if the buffer contains NH¤ ions , 0 if not.
organic = organicpercentage(eluent,RT),
viscosity = viscosity(organic,organic_modifier),
surface_tension = surfacetension(organic,organic_modifier),
polarity_index = polarityindex(organic,organic_modifier))
training = data %>%
filter(!is.na(SMILES)) %>%
filter(`Theoretical Amt` != "N/F") %>%
filter(`Theoretical Amt` != "N/A") %>%
mutate(`Theoretical Amt` = as.numeric(`Theoretical Amt`)) %>%
mutate(`Theoretical Amt` = `Theoretical Amt`/MW) #correct with MW
ggplot(data = training) +
geom_point(mapping = aes(x = `Theoretical Amt`,
y = area_IC)) +
facet_wrap(~Compound, scales = "free") +
scale_x_log10() +
scale_y_log10()
training = training %>%
group_by(SMILES) %>%
mutate(slope = linear_regression(area_IC, `Theoretical Amt`)$slope) %>%
ungroup()
IE_pred = training %>%
mutate(logIE_pred = 0) %>%
rename(organic_modifier_percentage = organic,
"name" = Compound)%>%
mutate(additive = "ammoniumacetate",
additive_concentration_mM = 2,
instrument = "Orbitrap",
source = "ESI",
solvent = "MeCN",#placeholder
SPLIT = "TRUE")%>%#placeholder
select(name,SMILES, 1452:1468,everything(),
-Filename,-RT,-Class,-`Theoretical Amt`,-SPLIT)%>%
na.omit()
IE_pred = IE_pred%>%
unique()
# prediction =  predict(regressor, newdata = IE_pred, predict.all = TRUE)
# prediction = prediction$aggregate
IE_pred <- IE_pred %>%
mutate(logIE_pred = predict(regressor, newdata = IE_pred, predict.all = TRUE)) %>%
select(SMILES,logIE_pred, everything())
IE_pred = IE_pred %>%
left_join(SMILES_data) %>%
select(name, SMILES, Class, logIE_pred, slope, everything(),-Compound)
correlation_factor = lm(log10(slope)~logIE_pred,data = IE_pred)
IE_pred = IE_pred %>%
mutate(response_factor = correlation_factor$coefficients[2]*logIE_pred +
correlation_factor$coefficients[1])%>%
mutate(pred_conc. = area_IC/(10^response_factor))%>%
left_join(training)%>%
mutate(error_factor = case_when(pred_conc. < `Theoretical Amt` ~ `Theoretical Amt`/pred_conc.,
pred_conc. >`Theoretical Amt` ~ pred_conc./`Theoretical Amt`))%>%
mutate(less_than_ten = case_when(error_factor < 10 ~ TRUE,
error_factor > 10 ~ FALSE))
Conc._error_boxplots = ggplot(data = IE_pred) +
geom_boxplot(mapping = aes(x = Class,
y = error_factor))
Conc._error_boxplots +
theme_classic() +
theme(axis.text.x = element_text(angle = 90))
IE_pred = IE_pred %>%
rename("Theoretical_pg/uL" = "Theoretical Amt",
"pred_pg/uL" = pred_conc.)
concentration_cor_Thomas = ggplot(data = IE_pred %>%
filter(instrument == "Orbitrap")) +
geom_point(mapping = aes(x = "Theoretical_pg/uL",
y = "pred_pg/uL",
#text = name)) +
color = name)) +
scale_y_log10() +
scale_x_log10() +
theme(legend.position="none")+
geom_abline(slope = 1, intercept = 0)+
facet_wrap(~Class)
concentration_cor_Thomas
Spiked_samples = Spiked_samples %>%
rename("Sample ID" = Filename,
name = Compound)
Spiked_samples = Spiked_samples[-c(1:3,7:12,17:25,29:42,46:52,59:73,127:138,112:114,119:122),]
IE_prededit <- IE_pred %>%
select(name, SMILES, logIE_pred,IC,MW)
IE_prededit <- IE_prededit %>%
unique()
blank_areas = Spiked_samples %>%
select(name) %>%
unique() %>%
left_join(Spiked_samples %>%
filter(`Sample ID` == "PL-4") %>%
select(name, Area)) %>%
mutate(Area = case_when(
is.na(Area) ~ 0,
TRUE ~ Area)) %>%
rename(Area_background = Area)
Spiked_samples = Spiked_samples %>%
left_join(IE_prededit) %>%
left_join(blank_areas) %>%
mutate(Area = Area - Area_background,
area_IC = Area*IC)
Spiked_samples = Spiked_samples %>%
mutate(response_factor3 = correlation_factor$coefficients[2]*logIE_pred +
correlation_factor$coefficients[1])%>%
mutate(pred_conc. = area_IC/(10^response_factor3))
Spiked_samples = Spiked_samples %>%
mutate(pred_conc_pg_uL = pred_conc.*MW)%>%
select(pred_conc_pg_uL, everything())%>%
mutate(pred_ng = case_when(
`Sample ID` == "QCN-AL" ~ (pred_conc_pg_uL*1097.2010178117)/1000,
`Sample ID` == "QCN-BL" ~ (pred_conc_pg_uL*961.704834605598)/1000,
`Sample ID` == "QCN-CL" ~ (pred_conc_pg_uL*952.162849872773)/1000,
TRUE ~ (pred_conc_pg_uL*1000)/1000))%>%
select(pred_ng, , everything())
ggplot(data = Spiked_samples %>%
filter(`Sample ID` != "PL-4"),
mapping = aes(x = name,
y = pred_ng,
fill = `Sample ID`)) +
geom_bar(position = "dodge", stat = "identity") +
geom_abline(slope = 0, intercept = 5) +
labs(x = "") +
theme(axis.text.x = element_text(angle = 90,
vjust = 0.5,
hjust = 1))
